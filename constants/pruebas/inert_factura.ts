const handleSendOrder = async () => {
    try {
      const pedido = {
        id: orderDetails.uniqueCode,
        estado: 'A',
        fechaCreacion: orderDetails.date,
        mesa: null,
        numero: orderDetails.orderNumber,
        ordenante: clientData.razonSocial,
        usuario: clientData.razonSocial,
        documento: 'PEDIDO',
        formaDespacho: orderDetails.formaDespacho || null,
        propina: 0,
        ultimaModificacion: new Date().toISOString(),
        enviadoPor: 'KioskoAutoservicio',
        version: 1,
        detalle: cart.map(item => ({
          id: null,
          cabecera: null,
          idArticulo: item.id,
          articulo: item.descripcion,
          codigo: item.codigo,
          cantidad: item.cantidad,
          idDetalle: null,
          idDetalleServ: 0,
          version: 1,
          estado: 'NUEVO',
          accion: '+',
          cantidadAccion: item.cantidad,
          observacion: null,
          persona: null,
          silla: null,
          ticketPorUnidad: null,
          linea: null,
          linea_orden: null,
          seccion: null,
          seccion_orden: null,
          categoria: null,
          motivoEliminado: null,
          impresoras_categoria: [],
        })),
      };

      const factura = {
        id: null,
        autorizacion: null,
        base0: null,
        baseIva: null,
        claveAcceso: null,
        cedula: clientData.identification,
        fechaCreacion: orderDetails.date,
        idPedido: orderDetails.uniqueCode,
        pedido_versionMD: 1,
        numero: orderDetails.orderNumber,
        descuentoTotal: 0,
        iva: null,
        ivaPorcentaje: null,
        total: total,
        razonSocial: clientData.razonSocial,
        serie1: '   ',
        serie2: '   ',
        documento: orderDetails.documento,
        idDocumento: orderDetails.uniqueCode,
        estado: 'ACTIVO',
        numeroPedido: orderDetails.orderNumber,
        mesa: null,
        formaDespacho: orderDetails.formaDespacho,
        propina: 0,
        versionMD: 1,
        direccion: null,
        correo: clientData.email || '',
        usuario: 'RUNFOOD',
        Pagos: orderDetails.formapago + total.toFixed(2),
        detalle: cart.map(item => ({
          idArticulo: item.id,
          articulo: item.descripcion,
          cantidad: item.cantidad,
          precio: item.pvp1,
          cabecera: null, 
          iva: null,
          pagaIva: null,
          ID: null,
          ID_PADRE: 0,
          orden_agrupacion: null,
          descuento: 0,
          codigo: item.codigo,
          neto: item.pvp1 * item.cantidad,
          total: total,
        })),
      };

      const envio = [pedido, [factura], null];

      await sendOrderData(envio);
    } catch (error) {
      console.error('Error al enviar los datos del pedido:', error);
    }
  };